services:
  first-service:
    build:
      args:
        SERVICE_NAME: first-service
    depends_on:
      - rabbitmq
      - otel-collector
    ports:
      - "6001:5001"
  second-service:
    build:
      args:
        SERVICE_NAME: second-service
    depends_on:
      - rabbitmq
      - otel-collector
    ports:
      - "6002:5002"
  rabbitmq:
    image: rabbitmq:4-management
    restart: always
    ports:
      - 5672:5672
      - 15672:15672
    environment:
      RABBITMQ_DEFAULT_USER: admin
      RABBITMQ_DEFAULT_PASS: admin
  otel-collector:
    image: otel/opentelemetry-collector:latest
    volumes:
      - ./otel-config.yaml:/etc/otel/config.yaml
    command:
      - "--config=/etc/otel/config.yaml"
    ports:
      - "4317:4317" #grpc
      - "4318:4318" #http
    depends_on:
      - loki
  loki:
    image: grafana/loki:main
    ports:
      - "3100:3100"
    volumes:
      - ./loki-config.yaml:/etc/loki/local-config.yaml
    command: -config.file=/etc/loki/local-config.yaml
  grafana:
    image: grafana/grafana:11.6.0
    environment:
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_BASIC_ENABLED=false
    ports:
      - 3000:3000/tcp
    entrypoint:
      - sh
      - -euc
      - |
        mkdir -p /etc/grafana/provisioning/datasources
        cat <<EOF > /etc/grafana/provisioning/datasources/ds.yaml
        apiVersion: 1
        datasources:
        - name: Loki
          type: loki
          access: proxy
          orgId: 1
          url: http://loki:3100
          basicAuth: false
          isDefault: false
          version: 1
          editable: false
        EOF
        /run.sh
