name: Python Code Quality

on: [push]
jobs:
  lock_file:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        project: [common, first-service, second-service]
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/setup-uv
      - name: Check if uv.lock is in sync
        run: uv lock --locked --directory ${{ matrix.project }}
  linting:
    runs-on: ubuntu-latest
    needs: [lock_file]
    strategy:
      matrix:
        project: [common, first-service, second-service]
    steps:
      - uses: actions/checkout@v4
      - name: Setup UV
        uses: astral-sh/setup-uv@v5
      - name: Linting with Ruff
        run: uv run ruff check ${{ matrix.project }}
  formatting:
    runs-on: ubuntu-latest
    needs: [lock_file]
    strategy:
      matrix:
        project: [common, first-service, second-service]
    steps:
      - uses: actions/checkout@v4
      - name: Setup UV
        uses: astral-sh/setup-uv@v5
      - name: Formatting Check with Ruff
        run: uv run ruff format --check ${{ matrix.project }}
  typing:
    runs-on: ubuntu-latest
    needs: [lock_file]
    strategy:
      matrix:
        project: [common, first-service, second-service]
    steps:
      - uses: actions/checkout@v4
      - name: Setup UV
        uses: astral-sh/setup-uv@v5
      - name: Check typings with Pyright
        run: uv run pyright ${{ matrix.project }}
  build:
    runs-on: ubuntu-latest
    needs: [linting, formatting]
    strategy:
      matrix:
        project: [common, first-service, second-service]
    steps:
      - uses: actions/checkout@v4
      - name: Setup UV
        uses: astral-sh/setup-uv@v5
      - name: Building
        run: uv build ${{ matrix.project }}
