name: Python Code Quality

on: [push]
jobs:
  lock_file:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        project: [common, api-service, consumer-service]
    defaults:
      run:
        working-directory: ${{ matrix.project }}
    steps:
      - uses: actions/checkout@v4
      - name: Setup UV
        uses: astral-sh/setup-uv@v5
      - name: Check if uv.lock is in sync
        run: uv lock --locked
  lint_format:
    runs-on: ubuntu-latest
    needs: [lock_file]
    strategy:
      matrix:
        project: [common, api-service, consumer-service]
    defaults:
      run:
        working-directory: ${{ matrix.project }}
    steps:
      - uses: actions/checkout@v4
      - name: Setup UV
        uses: astral-sh/setup-uv@v5
      - name: Linting with Ruff
        run: uv run ruff check .
      - name: Formatting Check with Ruff
        run: uv run ruff format --check .
  typing:
    runs-on: ubuntu-latest
    needs: [lock_file]
    strategy:
      matrix:
        project: [common, api-service, consumer-service]
    defaults:
      run:
        working-directory: ${{ matrix.project }}
    steps:
      - uses: actions/checkout@v4
      - name: Setup UV
        uses: astral-sh/setup-uv@v5
      - name: Check typings with Pyright
        run: uv run pyright .
  build:
    runs-on: ubuntu-latest
    needs: [lint_format, typing]
    strategy:
      matrix:
        project: [common, api-service, consumer-service]
    defaults:
      run:
        working-directory: ${{ matrix.project }}
    steps:
      - uses: actions/checkout@v4
      - name: Setup UV
        uses: astral-sh/setup-uv@v5
      - name: Building
        run: uv build
